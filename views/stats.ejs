<div class="row">
    <div class="col-12 col-md-12 mx-auto">
        <div class="d-flex align-items-start text-start">
            <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                <button class="nav-link active" id="v-pills-home-tab" data-bs-toggle="pill"
                    data-bs-target="#v-pills-home" type="button" role="tab" aria-controls="v-pills-home"
                    aria-selected="true">Information</button>
                <button class="nav-link" id="v-pills-profile-tab" data-bs-toggle="pill"
                    data-bs-target="#v-pills-profile" type="button" role="tab" aria-controls="v-pills-profile"
                    aria-selected="false">Factions</button>

                <div class="mt-2">
                    <b>Joined:</b>
                </div>
                <button class="nav-link" id="v-pills-messages-tab" data-bs-toggle="pill"
                    data-bs-target="#v-pills-messages" type="button" role="tab" aria-controls="v-pills-messages"
                    aria-selected="false">PKD</button>
                <button class="nav-link" id="v-pills-settings-tab" data-bs-toggle="pill"
                    data-bs-target="#v-pills-settings" type="button" role="tab" aria-controls="v-pills-settings"
                    aria-selected="false">Settings</button>
            </div>
            <div class="tab-content" id="v-pills-tabContent" style="width: 100%">
                <div class="tab-pane fade" id="v-pills-home" role="tabpanel"
                    aria-labelledby="v-pills-home-tab">
                    <div class="card justify-content-center" style="margin: auto; width: 400px; ">
                        <div class="card-body">
                            <h2 class="mb-0 text-center">
                                <img src="./img/discord-icon.svg" height="38">
                                <span> Community Info</span>
                            </h2>
                            <span class="mt-0 d-block text-center">Kindly complete the form below to
                                continue.</span>


                            <label for="ign"><b>Nickname or In-game Name (For Games) *</b></label>
                            <input type="text" id="ign" class="form-control" placeholder="LuisPK有一条龙" required>

                            <label for="joinReason" class="mt-3"> <b>Why do you want to join this community? *</b></label>

                            <!-- Texarea that has 100% width, 200px height and does not resize -->
                            <textarea id="joinReason" class="form-control bg-dark-subtle"
                                style="resize: none; width: 100%; height: 200px;"
                                placeholder="Being part of a community can provide a sense of belonging and support, as well as opportunities f..."></textarea>

                            <!-- Click the button to copy the text inside the textarea. Put approriate bootstrap class with clipboard icon.-->
                            <button class="btn btn-primary mb-3 mt-3 float-end" id="copyButton"
                                onclick="return false;">
                                <i class="far fa-clipboard me-2"></i> <span id="copyButtonSpan">Save Details</span>
                            </button>

                        </div>
                    </div>

                </div>
                
                <div class="tab-pane fade show active" id="v-pills-profile" role="tabpanel" aria-labelledby="v-pills-profile-tab">
                    <div class="row">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="v-pills-messages" role="tabpanel" aria-labelledby="v-pills-messages-tab">
                    
                    
                    // TODO: As a manager:
                    // TODO: Player's prefix and faction name
                    // TODO: Pending Applications
                    // TODO: Manage users, Promote to manager, Kick from the faction


                    // TODO: As a user: leave the faction
                </div>
                <div class="tab-pane fade" id="v-pills-settings" role="tabpanel" aria-labelledby="v-pills-settings-tab">...</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="staticBackdropLabel">Confirmation</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            Are you sure you want to leave the faction?
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary modal-close" data-bs-dismiss="modal">No, close!</button>
            <button type="button" class="btn btn-primary modal-confirm">Yes, I am sure</button>
        </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    let userDetails = localStorage.getItem("userDetails");
    userDetails = JSON.parse(userDetails);

    (async () => {
        const endPoint = '//mir4-serverless.appspot.com/api/v1/applications';
        const factionEndpoint = '//mir4-serverless.appspot.com/api/v1/factions';
        
        try {
            const factions = await axios.get(factionEndpoint, {
                headers: { 'x-access-token': userDetails.token }
            });


            if (Boolean(factions.data.isSuccess) === false){
                console.log(factions.data)
                window.showToast("Something went wrong. Please refresh the page!");
                return;
            }

            const template = `
                    <div class="col-6" >
                        <div class="card justify-content-center mb-2">
                            <div class="card-body">
                                <h2 class="mb-0 text-center">
                                    <span> {{CLAN_NAME}}</span>
                                </h2>

                                <div>{{DESCRIPTION}}</div>

                                <div class="float-end mt-3 members-count">
                                    {{MEMBERS-COUNT}} members
                                </div>
                                <!-- Click the button to copy the text inside the textarea. Put approriate bootstrap class with clipboard icon.-->
                                <button class="btn btn-primary mb-3 mt-3 float-start applicationButton" data-id="{{ROLE_ID}}">
                                    <i class="far fa-clipboard me-2"></i> <span class="applicationText">Apply</span>
                                </button>

                            </div>
                        </div>
                    </div>
                `;

                // loop through the response.data and append to #v-pills-profile
                factions.data.data.forEach(function(faction, i) {

                    // document.queryselector from template variable
                    document.querySelector

                    console.log();

                    //remove loading...
                    if (i === 0){
                        document.querySelector("#v-pills-profile>div").innerHTML = "";

                    }
                    let newTemplate = template;

                    newTemplate = newTemplate.replace("{{CLAN_NAME}}", faction.name);
                    newTemplate = newTemplate.replace("{{ROLE_ID}}", faction.roleid);
                    
                    // Replace the description
                    if (faction.hasOwnProperty("description") && faction.description.length > 0){
                        if (faction.description.length > 100) {
                            newTemplate = newTemplate.replace("{{DESCRIPTION}}", faction.description.substring(0, 100) + "...");
                        }else{
                            newTemplate = newTemplate.replace("{{DESCRIPTION}}", faction.description);
                        }

                    }else{
                        newTemplate = newTemplate.replace("{{DESCRIPTION}}", "No description");
                    }


                    // Replace the members count
                    if (faction.hasOwnProperty("members_count") && faction.members_count > 0){
                        newTemplate = newTemplate.replace("{{MEMBERS-COUNT}}", faction.members_count);
                    }else{
                        newTemplate = newTemplate.replace("{{MEMBERS-COUNT}}", "0");
                    }
                    
                

                    console.log(faction);
                    document.querySelector("#v-pills-profile>div").innerHTML += newTemplate;

                    // if faction.isMember is true, then change the button text to "Leave Faction"
                    if (faction.isMember){
                        document.querySelector(`[data-id="${faction.roleid}"]`).classList = "btn btn-danger mb-3 mt-3 float-start leaveFactionButton";
                        document.querySelector(`[data-id="${faction.roleid}"]`).querySelector(".applicationText").innerHTML = "Leave Faction";

                        // add this attribute to the button, data-bs-toggle="modal" data-bs-target="#staticBackdrop"
                        document.querySelector(`[data-id="${faction.roleid}"]`).setAttribute("data-bs-toggle", "modal");
                        document.querySelector(`[data-id="${faction.roleid}"]`).setAttribute("data-bs-target", "#staticBackdrop");

                        // change the icon to fa-times
                        document.querySelector(`[data-id="${faction.roleid}"]`).querySelector("i").classList = "fa fa-times me-2";
                        return;
                    }


                    if (faction.hasApplied){
                        document.querySelector(`[data-id="${faction.roleid}"]`).classList = "btn btn-warning mb-3 mt-3 float-start cancelApplicationButton";
                        document.querySelector(`[data-id="${faction.roleid}"]`).querySelector(".applicationText").innerHTML = "Cancel Application";

                        // change the icon to fa-times
                        document.querySelector(`[data-id="${faction.roleid}"]`).querySelector("i").classList = "fa fa-times me-2";
                    }

                });
            
        } catch (error) {
            window.showToast("Something went wrong. Please refresh the page!");
            return;
        }

    })();



    // dynamic query selector inside #v-pills-profile

    // change the event listener to target #v-pills-profile instead of .applicationButton
    document.querySelector("#v-pills-profile").addEventListener("click", async function(event) {
        // check if the clicked element has class applicationButton

        let target = event.target;
        const parent = target.parentElement;

        // if event.target is not a button, then it's a child of a button
        if (target.tagName !== "BUTTON" && parent && parent.tagName === 'BUTTON'){
            target = parent;
        }


        const applyEndPoint = '//mir4-serverless.appspot.com/api/v1/apply';
        const cancelEndPoint = '//mir4-serverless.appspot.com/api/v1/cancel';



        if (target.matches(".applicationButton")) {
            const dataId = target.getAttribute("data-id");

            
            // look for .applicationText inside this element
            target.querySelector(".applicationText").innerHTML = "Applying...";
            target.querySelector("i").classList = "fa fa-spinner fa-spin me-2";


            try {
                const response = await axios.post(applyEndPoint, { faction: dataId }, {
                    headers: {
                        'x-access-token': userDetails.token
                    }
                });

                if (Boolean(response.data.isSuccess) === false){
                    window.showToast(response.data.message);

                    // Bring back the original text
                    target.querySelector(".applicationText").innerHTML = "Apply";
                    target.querySelector("i").classList = "far fa-clipboard me-2";
                    return;
                }
                
                target.querySelector(".applicationText").innerHTML = "Cancel Application";
                target.querySelector("i").classList = "fa fa-times me-2";
                target.classList = "btn btn-warning mb-3 mt-3 float-start cancelApplicationButton";
                return;


                const LEAVE_FACTION_TEMPLATE = false; // TODO: Remove from here and just use in the renderings

                if (LEAVE_FACTION_TEMPLATE) {
                    target.querySelector(".applicationText").innerHTML = "Leave Faction";

                    // change to leaving icon
                    target.querySelector("i").classList = "fa fa-times me-2";
                    target.classList = "btn btn-danger mb-3 mt-3 float-start leaveFactionButton";
                    return
                }

            } catch (error) {
                // Bring back the original text
                target.querySelector(".applicationText").innerHTML = "Apply";
                target.querySelector("i").classList = "far fa-clipboard me-2";
                
                window.showToast("Something went wrong. Please refresh the page!");
            }
        }

        // check if the clicked element has class cancelApplicationButton
        if (target.matches(".cancelApplicationButton")) {

            // look for .applicationText inside this element
            target.querySelector(".applicationText").innerHTML = "Cancelling...";
            target.querySelector("i").classList = "fa fa-spinner fa-spin me-2";

            const dataId = target.getAttribute("data-id");

            
            // look for .applicationText inside this element
            target.querySelector(".applicationText").innerHTML = "Applying...";
            target.querySelector("i").classList = "fa fa-spinner fa-spin me-2";


            try {
                const response = await axios.post(cancelEndPoint, { faction: dataId }, {
                    headers: {
                        'x-access-token': userDetails.token
                    }
                });

                if (Boolean(response.data.isSuccess) === false){
                    window.showToast(response.data.message);

                    // Bring back the original text
                    target.querySelector(".applicationText").innerHTML = "Cancel Application";
                    target.querySelector("i").classList = "fa fa-times me-2";
                    return;
                }

                target.querySelector(".applicationText").innerHTML = "Apply";
                target.querySelector("i").classList = "far fa-clipboard me-2";
                target.classList = "btn btn-primary mb-3 mt-3 float-start applicationButton";
            }
            catch (error){
                // Bring back the original text
                target.querySelector(".applicationText").innerHTML = "Cancel Application";
                target.querySelector("i").classList = "fa fa-times me-2";
                
                window.showToast("Something went wrong. Please refresh the page!");
            }

        }

        // check if the clicked element has class leaveFactionButton
        if (target.matches(".leaveFactionButton")) {
            const modal = document.querySelector("#staticBackdrop");

            // add the id to the modal
            modal.setAttribute("data-id", target.getAttribute("data-id"));

            // function to remove data-id attribute from modal
            function removeDataId() {
                modal.removeAttribute("data-id");
            }

            function leaveFaction() {
                // Change the text of the .modal-confirm button to "Leaving..." and change the icon
                modal.querySelector(".modal-confirm").innerHTML = "Leaving...";
                
                // Disable the button
                modal.querySelector(".modal-confirm").setAttribute("disabled", true);
                modal.querySelector(".modal-close").setAttribute("disabled", true);
                modal.querySelector(".btn-close").setAttribute("disabled", true);


                // TODO: API Requests here
                setTimeout(function(){
                    modal.querySelector(".btn-close").removeAttribute("disabled");

                    // close the modal programmatically
                    modal.querySelector(".btn-close").click();

                    // Bring back the original text
                    modal.querySelector(".modal-confirm").innerHTML = "Yes, I am sure";
                    
                    // enable the button
                    modal.querySelector(".modal-confirm").removeAttribute("disabled");
                    modal.querySelector(".modal-close").removeAttribute("disabled");


                    // Change the text of the button to "Apply" and change the icon
                    target.querySelector(".applicationText").innerHTML = "Apply";
                    target.querySelector("i").classList = "far fa-clipboard me-2";
                    target.classList = "btn btn-primary mb-3 mt-3 float-start applicationButton";


                    // remove this attribute to the button, data-bs-toggle="modal" data-bs-target="#staticBackdrop"
                    target.removeAttribute("data-bs-toggle");
                    target.removeAttribute("data-bs-target");
                    
                }, 5000)
            }

            // add event listener to modal for when it's closed
            modal.addEventListener("hidden.bs.modal", function(event) {
                removeDataId();

                // remove the event listener
                modal.removeEventListener("hidden.bs.modal", removeDataId);
            });

            modal.querySelector(".modal-confirm").addEventListener("click", function(event) {
                leaveFaction();

                // remove the event listener 
                modal.removeEventListener("hidden.bs.modal", removeDataId);

                modal.querySelector(". modal-confirm").remove("click");
            });


            console.log(document.querySelector("#staticBackdrop").getAttribute("data-id"));

            // // look for .applicationText inside this element
            // target.querySelector(".applicationText").innerHTML = "Leaving...";
            // target.querySelector("i").classList = "fa fa-spinner fa-spin me-2";

            // setTimeout(() => {
            //     target.querySelector(".applicationText").innerHTML = "Apply";
            //     target.querySelector("i").classList = "far fa-clipboard me-2";
            //     target.classList = "btn btn-primary mb-3 mt-3 float-start applicationButton";


                        
            //     // remove this attribute to the button, data-bs-toggle="modal" data-bs-target="#staticBackdrop"
            //     target.removeAttribute("data-bs-toggle");
            //     target.removeAttribute("data-bs-target");

            

            // }, 1000);
        }
        
    });

    



    // TODO: If the user is logged in change the nickname placeholder to the user's nickname

    // TODO: If the user does not have details on Information, Disable other things
    // TODO: If the user already has details on Information, Make the "Faction" as active tab

</script>